'use client';
import { Suspense } from 'react';
import { useQuery } from '@tanstack/react-query';
import dynamic from 'next/dynamic';
import { fetchClient, fetchVulnerabilities, Client, Vulnerability } from '@/lib/api';
import { Heading, Skeleton } from "@chakra-ui/react";

const VulnerabilitiesTable = dynamic(() => import('@/components/VulnerabilitiesTable'));

export default function DashboardPage() {
  const { data: client } = useQuery<Client>({ queryKey: ['client'], queryFn: fetchClient });

  const { data: vulnerabilities, isLoading: loadingVulnerabilities } = useQuery<Vulnerability[]>({
    queryKey: ['vulnerabilities'],
    queryFn: () => fetchVulnerabilities(client?.clientId),
  });

  if (loadingVulnerabilities) {
    return <Skeleton height={400} />;
  }

  return (
    <>
      <Heading as="h1" mb="8">Vulnerabilities List</Heading>
      <Suspense fallback={<Skeleton height={200} />}>
        <VulnerabilitiesTable vulnerabilities={vulnerabilities || []} />
      </Suspense>
    </>
  );
}